import pandas as pd
from sklearn.metrics import classification_report
from sklearn.metrics import accuracy_score
from sklearn.metrics import precision_score
from sklearn.metrics import f1_score
from sklearn.metrics import recall_score
from sklearn.neural_network import MLPClassifier
from sklearn.model_selection import train_test_split
from sklearn.model_selection import StratifiedShuffleSplit
import matplotlib.pyplot as plt
from config import INPUT_CSV_FILENAME, RANDOM_STATE, FOLDS
import pandas as pd
import matplotlib.pyplot as plt

import tensorflow
from tensorflow.keras.layers import LSTM, Dense, Dropout

plt.style.use('ggplot')

# Load csv generated by DatasetGenerator directory
data = pd.read_csv('../DatasetGenerator/DataSets/' + INPUT_CSV_FILENAME)

# Separate features and label
X = data.iloc[:, :-1].values
# X = np.concatenate([X, X])
y = data.iloc[:, 20].values


# Separate data into outer training and testing
X_outer_train, X_outer_test, y_outer_train, y_outer_test = train_test_split(
    X, y, test_size=0.25, random_state=RANDOM_STATE)

X_inner_train, X_inner_test, y_inner_train, y_inner_test = train_test_split(
    X_outer_train, y_outer_train, test_size=0.25, random_state=RANDOM_STATE)

input_shape = (X_inner_train.shape[1],1)
model = tensorflow.keras.Sequential()
model.add(LSTM(128, input_shape=input_shape))
model.add(Dropout(0.2))
model.add(Dense(128, activation='relu'))
model.add(Dense(64, activation='relu'))
model.add(Dropout(0.4))
model.add(Dense(48, activation='relu'))
model.add(Dropout(0.4))
model.add(Dense(24, activation='softmax'))
model.summary()
model.compile(optimizer='adam',
              loss='SparseCategoricalCrossentropy', metrics=['acc'])
history = model.fit(X_inner_train, y_inner_train, epochs=50, batch_size=72,
                    validation_data=(X_inner_test, y_inner_test), shuffle=False)

